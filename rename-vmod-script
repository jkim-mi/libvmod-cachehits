#!/bin/bash
#
# Script to rename libvmod-cachehits into libvmod-foo.
# (where "foo" is your new vmod name, of course.)
#
# Leaves the changes uncommitted in the working tree, so you get to fix any
# unintended changes.
#
# Author: Lasse Karstensen <lkarsten@varnish-software.com>, September 2014.
#
set -o errexit

NAME=$1
if [ -z "$NAME" ]; then
	echo "Usage: $0 <new-vmod-name-without-libvmod-prefix>"
	echo "Rename libvmod-cachehits source tree."
	echo "If the name is an acronym, you can use capital letters."
	echo
	exit -1
fi

SYM_NAME=cachehits
CAP_NAME=CacheHits
UPP_NAME=CACHEHITS

#if ! git diff-index --quiet HEAD --; then
#	echo "ERROR: Need a clean working tree. Run \"git stash\" first."
#	exit -2
#fi

git mv src/vmod_cachehits.c src/vmod_${SYM_NAME}.c
git mv src/vmod_cachehits.vcc src/vmod_${SYM_NAME}.vcc

git grep -z -l cachehits | xargs -0 sed -i -s -e "s/cachehits/${SYM_NAME}/g"
git grep -z -l CacheHits | xargs -0 sed -i -s -e "s/CacheHits/${CAP_NAME}/g"
git grep -z -l CACHEHITS | xargs -0 sed -i -s -e "s/CACHEHITS/${UPP_NAME}/g"
sed -i '/circleci.com\/gh\/varnishcache\/libvmod-cachehits/d' README.rst

git rm -f rename-vmod-script

# restore foreign files
git checkout -- m4/

cat <<EOF
All done.

For your cut&paste needs:
git commit -a -m "Automatic rename of libvmod-cachehits to libvmod-${SYM_NAME}."
EOF
